<?php
/**
 * @file
 * Brightcove install file.
 */

/**
 * Implements hook_requirements().
 */
function brightcove_requirements($phase) {
  $requirements = array();

  $requirements['brightcove'] = array(
    'title' => 'Brightcove API',
  );

  // Check for API availability.
  if (!class_exists('Brightcove\API\API')) {
    $requirements['brightcove'] += array(
      'description' => t("Missing Brightcove API from the vendor folder"),
      'severity' => REQUIREMENT_ERROR,
    );
  }

  // If everything passes show that the Brightcove API is installed
  // successfully.
  if (!isset($requirements['severity']) || $requirements['severity'] == REQUIREMENT_OK) {
    $requirements['brightcove'] += array(
      'description' => t('Installed'),
      'severity' => REQUIREMENT_OK,
    );
  }

  return $requirements;
}

/**
 * Copy values from brightcove_callback table to a expirable key value store.
 */
function brightcove_update_8100(&$sandbox) {
  // Get database connection.
  $database = \Drupal::database();

  if (!isset($sandbox['progress'])) {
    $sandbox['progress'] = 0;
    $sandbox['max'] = $database->select('brightcove_callback', 'bc')
      ->fields('bc', ['id'])
      ->countQuery()
      ->execute()
      ->fetchField();
  }

  $key_value_expirable = \Drupal::keyValueExpirable('brightcove_callback');
  $entries = $database->select('brightcove_callback')
    ->fields('brightcove_callback')
    ->orderBy('id', 'ASC')
    ->range($sandbox['progress'], 50)
    ->execute()
    ->fetchAll();
  foreach ($entries as $entry) {
    $sandbox['progress']++;

    if (REQUEST_TIME < $entry->expires) {
      $key_value_expirable->setWithExpire($entry->token, $entry->video_id, $entry->expires - REQUEST_TIME);
    }
  }

  $sandbox['#finished'] = empty($sandbox['max']) ? 1 : ($sandbox['progress'] / $sandbox['max']);
}

/**
 * Drop brightcove_callback table.
 */
function brightcove_update_8101() {
  \Drupal::database()
    ->schema()
    ->dropTable('brightcove_callback');
}
